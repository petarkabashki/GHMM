CMAKE_MINIMUM_REQUIRED(VERSION 2.4)

project(ghmm)

#  where to look first for cmake modules, before ${CMAKE_ROOT}/Modules/ is checked
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")

option(GHMM_OBSOLETE "Build ghmm with obsolete functions" 1)
option(GHMM_UNSUPPORTED "Build the ghmm with unsupported functions" 0)
option(GHMM_RNG_MERSENNE_TWISTER "Use the internal Mersenne Twister random number generator" 1)
option(GHMM_RNG_BSD "Use the system BSD-style random number generator, only for backward compatibility" 0)
option(GHMM_RNG_GSL "Use the random number generator from the GSL" 0)
option(DO_WITH_GSL "Use the GSL, requires GHMM_RNG_GSL, makes the ghmm GPL" 0)

include(CheckIncludeFiles)
include(CheckLibraryExists)
include(CheckFunctionExists)
include(CheckSymbolExists)

check_include_files(dlfcn.h HAVE_DLFCN_H)
check_include_files(inttypes.h HAVE_INTTYPES_H)
check_include_files(memory.h HAVE_MEMORY_H)
check_include_files(stdint.h HAVE_STDINT_H)
check_include_files(stdlib.h HAVE_STDLIB_H)
check_include_files(strings.h HAVE_STRINGS_H)
check_include_files(string.h HAVE_STRING_H)
check_include_files(sys/stat.h HAVE_SYS_STAT_H)
check_include_files(sys/types.h HAVE_SYS_TYPES_H)
check_include_files(unistd.h HAVE_UNISTD_H)

check_library_exists(m pow  "" HAVE_LIBM)
check_library_exists(m exp  "" HAVE_LIBM)
check_library_exists(m sqrt "" HAVE_LIBM)
check_library_exists(pthread pthread_join "" HAVE_LIBPTHREAD)

if(!${DO_WITH_GSL})
  check_library_exists(m cos "" HAVE_LIBM)
endif(!${DO_WITH_GSL})

if(${GHMM_RNG_BSD})
check_library_exists(bsd random "" HAVE_LIBBSD)
endif(${GHMM_RNG_BSD})

configure_file(
	${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake
	${CMAKE_CURRENT_BINARY_DIR}/config.h
)

add_definitions(-DHAVE_CONFIG_H)

add_subdirectory(ghmm)

add_subdirectory(tools)

add_subdirectory(tests)
