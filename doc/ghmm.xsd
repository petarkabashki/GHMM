<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- edited with XMLSpy v2006 sp1 U (http://www.altova.com) by Stefan Schumacher (abc) -->
<!--W3C Schema generated by XMLSpy v2006 sp1 U (http://www.altova.com)-->
<xs:schema xmlns="http://www.ghmm.org/ghmm.schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.ghmm.org/ghmm.schema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="HMM">
		<xs:annotation>
			<xs:documentation>model</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="alphabet" maxOccurs="2">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="symbol" maxOccurs="unbounded"/>
						</xs:sequence>
						<xs:attribute name="id" use="required">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="background" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="name" type="xs:string" use="required"/>
								<xs:attribute name="order" type="xs:nonNegativeInteger" use="required"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="classLabels" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="symbol" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element ref="node" maxOccurs="unbounded"/>
				<xs:element ref="edge" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="name" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="example"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="discrete"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="discrete">
		<xs:annotation>
			<xs:documentation>discrete emission probabilities, CSV n-th entry is the probability of the symbol with code (n-1); can have optionally an order</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="0.2,0.2,0.3,0.3"/>
				<xs:enumeration value="0.25,0.25,0.25,0.25"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="edge">
		<xs:annotation>
			<xs:documentation>transition from source to target with probability; probability is CSV for transition classes</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="probability" type="xs:string"/>
			</xs:sequence>
			<xs:attribute name="source" type="xs:nonNegativeInteger" use="required"/>
			<xs:attribute name="target" type="xs:nonNegativeInteger" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="node">
		<xs:annotation>
			<xs:documentation>state are numerated from 0 to N-1; can have different emissions and some optional features</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:element name="silent" nillable="true"/>
					<xs:element name="discrete">
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base="xs:string">
									<xs:attribute name="order" type="xs:nonNegativeInteger" default="0"/>
								</xs:extension>
							</xs:simpleContent>
						</xs:complexType>
					</xs:element>
					<xs:element name="mixture">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="normal">
									<xs:complexType>
										<xs:attribute name="mean" type="xs:float" use="required"/>
										<xs:attribute name="variance" type="xs:float" use="required"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="truncatedGaussian">
									<xs:complexType>
										<xs:attribute name="mean" type="xs:float" use="required"/>
										<xs:attribute name="variance" type="xs:float" use="required"/>
										<xs:attribute name="cutBelow" type="xs:float" use="required"/>
										<xs:attribute name="cutAbove" type="xs:float" use="required"/>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="pair" type="xs:string"/>
				</xs:choice>
				<xs:element name="backgroundName" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="intron_bg"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="classLabel" type="xs:nonNegativeInteger" minOccurs="0"/>
				<xs:element name="position">
					<xs:complexType>
						<xs:attribute name="x" type="xs:decimal" use="required"/>
						<xs:attribute name="y" type="xs:decimal" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
			<xs:attribute name="initial" type="xs:float" use="required"/>
			<xs:attribute name="desc" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Node 0"/>
						<xs:enumeration value="Node 1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="position">
		<xs:annotation>
			<xs:documentation>position for drawing</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="x" type="xs:float" use="required"/>
			<xs:attribute name="y" type="xs:float" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="probability">
		<xs:annotation>
			<xs:documentation>transition probability</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="0.2"/>
				<xs:enumeration value="0.4"/>
				<xs:enumeration value="0.6"/>
				<xs:enumeration value="0.8"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="symbol">
		<xs:annotation>
			<xs:documentation>mapping from symbol to interger</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="code" type="xs:nonNegativeInteger" use="required"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
</xs:schema>
